import{_ as s,c as n,o as a,W as l}from"./chunks/framework.7ce97047.js";const C=JSON.parse('{"title":"探索Rollup是如何对静态资源进行处理的","description":"","frontmatter":{"title":"探索Rollup是如何对静态资源进行处理的","date":"2023-07-19T17:59:00.000Z"},"headers":[],"relativePath":"frontend/post-rollup-static.md","filePath":"frontend/post-rollup-static.md"}'),p={name:"frontend/post-rollup-static.md"},o=l(`<p>自从 Vite 3 发布起，就开始用它做了不少实践和项目，Vite 的底层是 Rollup 和 Esbuild。而 Rollup 用在打包阶段，一直以来我都好奇对 Rollup 如何处理静态资源的，那么今天主要是想探索一下，如何写一个 Rollup 插件，实现：</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> Image </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;./image-actions.png&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(Image);</span></span></code></pre></div><p>打包成下面这样，且生成对应的文件</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Image</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;./image-actions-xxx.png&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(Image);</span></span></code></pre></div><p>想要上手，那肯定是得先搭建一个简易环境。</p><h2 id="搭建打包环境" tabindex="-1">搭建打包环境 <a class="header-anchor" href="#搭建打包环境" aria-label="Permalink to &quot;搭建打包环境&quot;">​</a></h2><h3 id="安装必要的依赖" tabindex="-1">安装必要的依赖 <a class="header-anchor" href="#安装必要的依赖" aria-label="Permalink to &quot;安装必要的依赖&quot;">​</a></h3><ol><li>先建个空目录，进入里面初始化一个项目，<code>-y</code>表示一路<code>yes</code>，即使用默认参数。</li></ol><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-light"><code><span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">init</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-y</span></span></code></pre></div><ol start="2"><li>安装依赖</li></ol><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-light"><code><span class="line"><span style="color:#6F42C1;">pnpm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">i</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rollup</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-D</span></span></code></pre></div><ol start="3"><li>实现一下基本的打包流程</li></ol><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-light"><code><span class="line"><span style="color:#6A737D;">// &lt;root&gt;/build.js</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">run</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">async</span><span style="color:#24292E;"> () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">bundle</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">rollup</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">    input: </span><span style="color:#032F62;">&#39;src/main.js&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    plugins: [</span><span style="color:#6F42C1;">plugin</span><span style="color:#24292E;">()],</span></span>
<span class="line"><span style="color:#24292E;">  });</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> bundle.</span><span style="color:#6F42C1;">write</span><span style="color:#24292E;">({ dir: </span><span style="color:#032F62;">&#39;dist&#39;</span><span style="color:#24292E;"> });</span></span>
<span class="line"><span style="color:#24292E;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">run</span><span style="color:#24292E;">();</span></span></code></pre></div><ol start="4"><li>插件</li></ol><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-light"><code><span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">plugin</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">assets</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Map</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    name: </span><span style="color:#032F62;">&#39;rollup:plugin&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">load</span><span style="color:#24292E;">(</span><span style="color:#E36209;">id</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">id.</span><span style="color:#6F42C1;">endsWith</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;.png&#39;</span><span style="color:#24292E;">)) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">key</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">emitFile</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">        type: </span><span style="color:#032F62;">&#39;asset&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        name: path.</span><span style="color:#6F42C1;">basename</span><span style="color:#24292E;">(id),</span></span>
<span class="line"><span style="color:#24292E;">        source: fs.</span><span style="color:#6F42C1;">readFileSync</span><span style="color:#24292E;">(id),</span></span>
<span class="line"><span style="color:#24292E;">      });</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">ID</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">\`ROLLUP_FILE_URL_\${</span><span style="color:#24292E;">key</span><span style="color:#032F62;">}\`</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">      assets.</span><span style="color:#6F42C1;">set</span><span style="color:#24292E;">(key, </span><span style="color:#005CC5;">ID</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#032F62;">\`export default i<wbr>mport.meta.\${</span><span style="color:#005CC5;">ID</span><span style="color:#032F62;">};\`</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">resolveFileUrl</span><span style="color:#24292E;">({ </span><span style="color:#E36209;">referenceId</span><span style="color:#24292E;"> }) {</span></span>
<span class="line"><span style="color:#24292E;">      console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;resolve file url&#39;</span><span style="color:#24292E;">, referenceId, </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">getFileName</span><span style="color:#24292E;">(referenceId));</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#032F62;">\`&#39;\${</span><span style="color:#005CC5;">this</span><span style="color:#032F62;">.</span><span style="color:#6F42C1;">getFileName</span><span style="color:#032F62;">(</span><span style="color:#24292E;">referenceId</span><span style="color:#032F62;">)</span><span style="color:#032F62;">}&#39;\`</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">  };</span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre></div>`,15),e=[o];function t(c,r,y,i,E,d){return a(),n("div",null,e)}const g=s(p,[["render",t]]);export{C as __pageData,g as default};
