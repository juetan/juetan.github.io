import{_ as e,I as t,o as c,c as p,k as s,M as l,a,W as n}from"./chunks/framework.d6d633f0.js";const r="/assets/image-go-dl.18047aa6.png",i="/assets/image-go-version.5a33f50b.png",d="/assets/image-go-run.9ee44e8b.png",A=JSON.parse('{"title":"Go系列[一]：安装，编译和运行","description":"","frontmatter":{"title":"Go系列[一]：安装，编译和运行","date":"2023-09-07T18:13:00.000Z"},"headers":[],"relativePath":"go/01.start/index.md","filePath":"go/01.start/index.md"}'),_={name:"go/01.start/index.md"},g=s("h2",{id:"下载安装",tabindex:"-1"},[a("下载安装 "),s("a",{class:"header-anchor",href:"#下载安装","aria-label":'Permalink to "下载安装"'},"​")],-1),u=s("ol",null,[s("li",null,[a("打开 "),s("a",{href:"https://golang.google.cn/dl/",target:"_blank",rel:"noreferrer"},"官网"),a(" 下载，如下：")])],-1),y=s("ol",{start:"2"},[s("li",null,[a("按照指示安装，安装完打开CMD输入 "),s("code",null,"go version"),a(" 命令并回车，应该有如下输出：")])],-1),m=n(`<h2 id="上手运行" tabindex="-1">上手运行 <a class="header-anchor" href="#上手运行" aria-label="Permalink to &quot;上手运行&quot;">​</a></h2><p>Go 是一门编译型语言，需要先编译在运行，接下来写个小示例。</p><ol><li>新建文件夹，以及一个 <code>main.go</code> 文件。</li></ol><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-light"><code><span class="line"><span style="color:#6F42C1;">mkdir</span><span style="color:#24292E;"> </span><span style="color:#032F62;">go-01</span></span>
<span class="line"><span style="color:#005CC5;">cd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">go-01</span></span>
<span class="line"><span style="color:#6F42C1;">touch</span><span style="color:#24292E;"> </span><span style="color:#032F62;">main.go</span></span></code></pre></div><ol start="2"><li>修改 <code>main.go</code> 文件，写个hello, world。</li></ol><div class="language-go"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki github-light"><code><span class="line"><span style="color:#D73A49;">package</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;</span><span style="color:#6F42C1;">fmt</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">func</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> msg </span><span style="color:#D73A49;">string</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;hello, world&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  fmt.</span><span style="color:#005CC5;">Println</span><span style="color:#24292E;">(msg);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>以上代码中：</p><ul><li>使用 <code>package</code> 语法声明包的名字，每个文件都是单独的包，层级类似文件目录</li><li>使用 <code>import</code> 语法导入包，fmt 是 format 的简写</li><li>使用 <code>func</code> 语法声明函数，当函数名为 main 时作为命令行程序的入口，func 是 function 的简写</li><li>使用 <code>var</code> 声明变量，var 是 variable 的简写</li><li>类型 <code>string</code> 跟在变量名后面，以空格分隔</li><li>使用 <code>Println</code> 打印字符串，并在字符串末尾添加换行符，ln 是 line 的简写</li></ul><ol start="3"><li>运行 <code>go run main.go</code> 命令，没有意外的话输出如下：</li></ol>`,9),h=n('<p>命令 <code>go</code> 是 Go 语言的管理命令，执行编译、运行等任务，其中：</p><ul><li>命令 <code>build</code> 将代码构建成可执行文件，在 Windows 上会打包成 <code>.exe</code> 文件</li><li>命令 <code>run</code> 会临时构建并运行代码</li></ul><h2 id="基本概念" tabindex="-1">基本概念 <a class="header-anchor" href="#基本概念" aria-label="Permalink to &quot;基本概念&quot;">​</a></h2><p>不用语言之间有很多共同概念，这里简单过一下 Go 的一些特点，如下：</p><ul><li>使用 unicode 作为字符集</li><li>语句末尾的分号可有可无，除非语义不明</li><li>使用 var 声明变量</li><li>使用 C 语言风格的注释，即 <code>// 注释内容</code> 格式</li></ul>',5);function f(C,E,b,v,T,k){const o=t("Image");return c(),p("div",null,[g,u,s("p",null,[l(o,{src:r,class:"cursor-pointer"})]),y,s("p",null,[l(o,{src:i,class:"cursor-pointer"})]),m,s("p",null,[l(o,{src:d,class:"cursor-pointer"})]),h])}const F=e(_,[["render",f]]);export{A as __pageData,F as default};
