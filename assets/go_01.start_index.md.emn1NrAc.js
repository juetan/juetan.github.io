import{_ as e,E as o,c as i,k as s,J as l,S as n,o as r}from"./chunks/framework.3EKbrk2Y.js";const t="/assets/image-go-dl.RB_MwmTf.png",c="/assets/image-go-version.HJ67T-NF.png",p="/assets/image-go-run.Celf_jy1.png",k=JSON.parse('{"title":"Go系列[一]：安装，编译和运行","description":"","frontmatter":{"title":"Go系列[一]：安装，编译和运行","date":"2023-09-07T18:13:00.000Z","thumbnail":"/assets/golang.jpg"},"headers":[],"relativePath":"go/01.start/index.md","filePath":"go/01.start/index.md"}'),d={name:"go/01.start/index.md"},u=n('<p>Go 语言是一门编译型语言，由 Google 创立于 2007 年，因此很容易联想到 Go 语言名字的由来。</p><h2 id="历史" tabindex="-1">历史 <a class="header-anchor" href="#历史" aria-label="Permalink to &quot;历史&quot;">​</a></h2><ul><li>2007年 创建</li><li>2012年 发布 v1.0 版本</li></ul><h2 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h2><ol><li>打开 <a href="https://golang.google.cn/dl/" target="_blank" rel="noreferrer">官网</a> 下载，如果需要版本管理，可以使用 <a href="https://github.com/moovweb/gvm" target="_blank" rel="noreferrer">GVM</a> 工具。</li></ol>',5),g=s("ol",{start:"2"},[s("li",null,"按照指示操作即可，安装完打开CMD输入 go version 命令并回车，有如下输出即代表安装成功。")],-1),_=n(`<h2 id="上手" tabindex="-1">上手 <a class="header-anchor" href="#上手" aria-label="Permalink to &quot;上手&quot;">​</a></h2><p>Go 是一门编译型语言，需要先编译再运行，接下来写个小示例。</p><ol><li>新建文件夹，以及一个 <code>main.go</code> 文件。</li></ol><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-light vp-code"><code><span class="line"><span style="color:#6F42C1;">mkdir</span><span style="color:#032F62;"> go-01</span></span>
<span class="line"><span style="color:#005CC5;">cd</span><span style="color:#032F62;"> go-01</span></span>
<span class="line"><span style="color:#6F42C1;">touch</span><span style="color:#032F62;"> main.go</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ol start="2"><li>修改 <code>main.go</code> 文件，写个hello, world。</li></ol><div class="language-go line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki github-light vp-code"><code><span class="line"><span style="color:#D73A49;">package</span><span style="color:#6F42C1;"> main</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#032F62;"> &quot;</span><span style="color:#6F42C1;">fmt</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">func</span><span style="color:#6F42C1;"> main</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#D73A49;">  var</span><span style="color:#24292E;"> msg </span><span style="color:#D73A49;">string</span><span style="color:#D73A49;"> =</span><span style="color:#032F62;"> &quot;hello, world&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  fmt.</span><span style="color:#005CC5;">Println</span><span style="color:#24292E;">(msg);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>以上代码中：</p><ul><li>使用 <code>package</code> 语法声明包的名字，每个文件都是单独的包，层级类似文件目录</li><li>使用 <code>import</code> 语法导入包，fmt 是 format 的简写</li><li>使用 <code>func</code> 语法声明函数，当函数名为 main 时作为命令行程序的入口，func 是 function 的简写</li><li>使用 <code>var</code> 声明变量，var 是 variable 的简写</li><li>类型 <code>string</code> 跟在变量名后面，以空格分隔</li><li>使用 <code>Println</code> 打印字符串，并在字符串末尾添加换行符，ln 是 line 的简写</li></ul><ol start="3"><li>运行 <code>go run main.go</code> 命令，没有意外的话输出如下：</li></ol>`,9),m=n('<p>命令 <code>go</code> 是 Go 语言的管理命令，执行编译、运行等任务，其中：</p><ul><li>命令 <code>build</code> 将代码构建成可执行文件，在 Windows 上会打包成 <code>.exe</code> 文件</li><li>命令 <code>run</code> 会临时构建并运行代码</li></ul><h2 id="基本概念" tabindex="-1">基本概念 <a class="header-anchor" href="#基本概念" aria-label="Permalink to &quot;基本概念&quot;">​</a></h2><p>不用语言之间有很多共同概念，这里简单过一下 Go 的一些特点，如下：</p><ul><li>使用 unicode 作为字符集</li><li>语句末尾的分号可有可无，除非语义不明</li><li>使用 var 声明变量</li><li>使用 C 语言风格的注释，即 <code>// 注释内容</code> 格式</li></ul><h2 id="备注" tabindex="-1">备注 <a class="header-anchor" href="#备注" aria-label="Permalink to &quot;备注&quot;">​</a></h2><ul><li>根目录下的文件不能在main.go中直接调用，应 <code>go run .</code>或<code>go run main.go test.go</code></li><li>go get 在项目中安装依赖</li><li>go install 全局安装命令</li></ul><h2 id="命令" tabindex="-1">命令 <a class="header-anchor" href="#命令" aria-label="Permalink to &quot;命令&quot;">​</a></h2><ul><li>go mod</li><li>go get</li><li>go install 安装二进制命令：生成可执行文件，移动到GOPATH/bin目录下</li><li>go build</li><li>go test 执行 *_test.go 文件</li><li>go generate</li><li>go env</li><li>go list</li><li>go run</li><li>go version</li><li>go fmt</li><li>go clean</li></ul>',9);function h(b,y,f,v,C,T){const a=o("Image");return r(),i("div",null,[u,s("p",null,[l(a,{src:t,class:"cursor-pointer"})]),g,s("p",null,[l(a,{src:c,class:"cursor-pointer"})]),_,s("p",null,[l(a,{src:p,class:"cursor-pointer"})]),m])}const q=e(d,[["render",h]]);export{k as __pageData,q as default};
