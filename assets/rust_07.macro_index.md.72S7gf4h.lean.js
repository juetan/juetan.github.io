import{_ as l,E as p,o as e,c as o,k as s,J as r,S as t,a as n}from"./chunks/framework.doOmauVw.js";const c="/assets/image-attr-run.RIU4aIhA.png",_=JSON.parse('{"title":"Rust系列[七]：宏，派生宏、属性宏和函数宏","description":"","frontmatter":{"title":"Rust系列[七]：宏，派生宏、属性宏和函数宏","date":"2023-09-01T09:38:00.000Z","thumbnail":"/assets/rust.webp"},"headers":[],"relativePath":"rust/07.macro/index.md","filePath":"rust/07.macro/index.md"}'),i={name:"rust/07.macro/index.md"},y=t("",58),u=s("h3",{id:"函数宏",tabindex:"-1"},[n("函数宏 "),s("a",{class:"header-anchor",href:"#函数宏","aria-label":'Permalink to "函数宏"'},"​")],-1),b=s("p",null,"函数宏，指功能与函数类似，只不过函数在运行期执行，函数宏在编译器执行，因而函数宏更多的是对代码进行检查并对代码进行替换、更新等操作。",-1),d=s("h2",{id:"结语",tabindex:"-1"},[n("结语 "),s("a",{class:"header-anchor",href:"#结语","aria-label":'Permalink to "结语"'},"​")],-1),m=s("p",null,"写宏感觉在写编译，输入是代码，输出也是代码。宏的另一个作用，是减少运行时的开销，尽量把能确定的内容在编译器搞定。并且，宏遵循编译语法，这样更容易在编译器识别潜在的风险。",-1);function E(C,h,A,D,F,g){const a=p("Image");return e(),o("div",null,[y,s("p",null,[r(a,{src:c,class:"cursor-pointer"})]),u,b,d,m])}const q=l(i,[["render",E]]);export{_ as __pageData,q as default};
