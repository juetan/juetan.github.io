import{_ as e,o,c as i,k as t,a as r}from"./chunks/framework.d6d633f0.js";const u=JSON.parse('{"title":"HTTP协议：Origin、Host和Referer请求头字段","description":"","frontmatter":{"title":"HTTP协议：Origin、Host和Referer请求头字段","date":"2023-07-22T13:00:00.000Z","tags":"HTTP"},"headers":[],"relativePath":"tools/post-http-origin.md","filePath":"tools/post-http-origin.md"}'),s={name:"tools/post-http-origin.md"},a=t("p",null,"在开发者工具中的网络面板中，经常能看到这几个字段，而且这几个字段的值看着都差不多，它们到底有什么用呢？首先说说它们的一个共同点，都是由浏览器自动携带，与安全/权限相关，接下来分别聊聊它们各自的作用。",-1),n=t("h2",{id:"origin",tabindex:"-1"},[r("Origin "),t("a",{class:"header-anchor",href:"#origin","aria-label":'Permalink to "Origin"'},"​")],-1),c=t("p",null,"直译为源头，我们常说的跨域就与它有关。跨域，可简单理解为跨域域名，即在A域名下的页面向B域名发请求，这样是有潜在安全问题的，因此，需要通过同源策略进行限制。同源中的源即为 Origin，指的是协议名、主机名和端口相同。",-1),l=[a,n,c];function p(d,_,h,g,f,m){return o(),i("div",null,l)}const O=e(s,[["render",p]]);export{u as __pageData,O as default};
